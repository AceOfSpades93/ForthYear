package AIAW.eightpuzzle;

import java.util.Arrays;

public class PuzzleBoard {

	private int[][] tiles_;
	private int hBlank, vBlank;
	
	public PuzzleBoard(int[][] tiles) {
		if (null == tiles || tiles.length <= 0) {
		  throw new IllegalArgumentException();
		}
		
		tiles_ = new int[tiles.length][tiles[0].length];
		
		for (int i = 0; i < tiles.length; ++i) {
			for (int j = 0; j < tiles[i].length; ++j) {
				if (0 == tiles[i][j]) {
					hBlank = i;
					vBlank = j;
				}
				tiles_[i][j] = tiles[i][j];
			}
		}
	}
	
	public boolean equals(Object y) {
		if (null == y || !(y instanceof PuzzleBoard)) {
			return false;
		}
		
		return Arrays.deepEquals(tiles_, ((PuzzleBoard)y).tiles_);
		
	}
	
	public Iterable<PuzzleBoard> neighboars() {
		return null;
	}
}
